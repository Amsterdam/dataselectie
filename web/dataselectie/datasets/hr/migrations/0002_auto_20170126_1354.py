# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-01-26 13:54
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models

from datasets.hr import migrate


class Migration(migrations.Migration):
    dependencies = [
        ('hr', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GeoVestigingen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True,
                                        serialize=False, verbose_name='ID')),
                ('vestigingsnummer', models.CharField(db_index=True,
                                                      help_text='Betreft het identificerende gegeven voor de Vestiging',
                                                      max_length=12)),
                ('sbi_code_int', models.IntegerField(db_index=True,
                                                     help_text='De codering van de activiteit conform de SBI2008')),
                ('sbi_code', models.CharField(db_index=True,
                                              help_text='De codering van de activiteit conform de SBI2008',
                                              max_length=5)),
                ('activiteitsomschrijving', models.TextField(blank=True,
                                                             help_text='\n            De omschrijving van de activiteiten die de\n            Vestiging of Rechtspersoon uitoefent',
                                                             null=True)),
                ('subtype',
                 models.CharField(blank=True, db_index=True, max_length=200,
                                  null=True)),
                ('naam',
                 models.CharField(blank=True, max_length=200, null=True)),
                (
                'uri', models.CharField(blank=True, max_length=200, null=True)),
                ('hoofdvestiging', models.BooleanField()),
                ('locatie_type', models.CharField(blank=True,
                                                  choices=[('B', 'Bezoek'),
                                                           ('P', 'Post'),
                                                           ('V', 'Vestiging')],
                                                  max_length=1, null=True)),
                ('geometrie',
                 django.contrib.gis.db.models.fields.PointField(blank=True,
                                                                null=True,
                                                                srid=28992)),
                ('sbi_detail_group', models.CharField(blank=True, db_index=True,
                                                      help_text='De codering van de activiteit conform de SBI2008',
                                                      max_length=200,
                                                      null=True)),
                ('bag_vbid',
                 models.CharField(blank=True, max_length=16, null=True)),
                ('correctie', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Locatie',
            fields=[
                ('id', models.CharField(max_length=18, primary_key=True,
                                        serialize=False)),
                ('volledig_adres',
                 models.CharField(blank=True, help_text='Samengesteld adres ',
                                  max_length=550, null=True)),
                ('toevoeging_adres', models.TextField(blank=True,
                                                      help_text='Vrije tekst om een Adres nader aan te kunnen duiden',
                                                      null=True)),
                ('afgeschermd', models.BooleanField(
                    help_text='Geeft aan of het adres afgeschermd is of niet')),
                ('postbus_nummer',
                 models.CharField(blank=True, db_index=True, max_length=10,
                                  null=True)),
                ('bag_numid',
                 models.CharField(blank=True, db_index=True, max_length=16,
                                  null=True)),
                ('bag_vbid',
                 models.CharField(blank=True, db_index=True, max_length=16,
                                  null=True)),
                ('bag_nummeraanduiding', models.URLField(blank=True,
                                                         help_text='Link naar de BAG Nummeraanduiding',
                                                         null=True)),
                ('bag_adresseerbaar_object', models.URLField(blank=True,
                                                             help_text='Link naar het BAG Adresseerbaar object',
                                                             null=True)),
                ('straat_huisnummer',
                 models.CharField(blank=True, max_length=220, null=True)),
                ('postcode_woonplaats',
                 models.CharField(blank=True, max_length=220, null=True)),
                ('regio',
                 models.CharField(blank=True, max_length=170, null=True)),
                (
                'land', models.CharField(blank=True, max_length=50, null=True)),
                ('geometrie',
                 django.contrib.gis.db.models.fields.PointField(blank=True,
                                                                null=True,
                                                                srid=28992)),
                ('straatnaam',
                 models.CharField(blank=True, db_index=True, max_length=100,
                                  null=True)),
                ('toevoegingadres',
                 models.CharField(blank=True, max_length=100, null=True)),
                ('huisletter',
                 models.CharField(blank=True, max_length=1, null=True)),
                ('huisnummer', models.DecimalField(blank=True, db_index=True,
                                                   decimal_places=0,
                                                   max_digits=5, null=True)),
                ('huisnummertoevoeging',
                 models.CharField(blank=True, max_length=5, null=True)),
                ('postcode',
                 models.CharField(blank=True, db_index=True, max_length=6,
                                  null=True)),
                ('plaats',
                 models.CharField(blank=True, db_index=True, max_length=100,
                                  null=True)),
                ('correctie', models.NullBooleanField()),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('query_string',
                 models.CharField(blank=True, db_index=True, max_length=180,
                                  null=True)),
            ],
        ),
        migrations.AddField(
            model_name='geovestigingen',
            name='bezoekadres',
            field=models.ForeignKey(blank=True, help_text='bezoekadres',
                                    null=True,
                                    on_delete=django.db.models.deletion.CASCADE,
                                    related_name='+', to='hr.Locatie'),
        ),
        migrations.AddField(
            model_name='geovestigingen',
            name='postadres',
            field=models.ForeignKey(blank=True, help_text='postadres',
                                    null=True,
                                    on_delete=django.db.models.deletion.CASCADE,
                                    related_name='+', to='hr.Locatie'),
        ),
    ]  # Dataselectie view
    migrate.ManageView(
        view_name="hr_betrokken_personen",
        sql="""
    SELECT row_number() OVER (ORDER BY (( SELECT 1))) AS id,
       mac.naam AS mac_naam,
       mac.kvk_nummer,
       mac.datum_aanvang,
       mac.datum_einde,
       vs.id AS vestiging_id,
       vs.vestigingsnummer,
       p1.id AS persoons_id,
       p1.rol,
           CASE
               WHEN p1.naam IS NOT NULL THEN p1.naam
               WHEN p2.naam IS NOT NULL THEN p2.naam
               WHEN np1.geslachtsnaam IS NOT NULL THEN np1.geslachtsnaam
               ELSE NULL::character varying
           END AS naam,
       p1.rechtsvorm,
       fv.functietitel,
       fv.soortbevoegdheid,
       np2.geslachtsnaam AS bevoegde_naam
      FROM hr_maatschappelijkeactiviteit mac
        JOIN hr_vestiging vs ON vs.maatschappelijke_activiteit_id = mac.id
        JOIN hr_persoon p1 ON mac.eigenaar_id = p1.id
        LEFT JOIN hr_natuurlijkpersoon np1 ON np1.id::text = p1.natuurlijkpersoon_id::text
        LEFT JOIN hr_functievervulling fv ON fv.heeft_aansprakelijke_id = mac.eigenaar_id
        LEFT JOIN hr_persoon p2 ON fv.is_aansprakelijke_id = p2.id
        LEFT JOIN hr_natuurlijkpersoon np2 ON np2.id::text = p2.natuurlijkpersoon_id::text
    """),
